#include <iostream>
#include <stdio.h>

using namespace std;


int main()
{
    // Вычисляемое поле - средний курс доллара

    setlocale(LC_ALL, "Rus");
    srand(time(0)); // Инициализация рандомайзера

    struct BANK {
        char name[10]; // Название банка
        int b_d = -1, s_d = -1, b_e = -1, s_e = -1; // Обменный курс
    };

    float SR_ALL = 0; // Среднее значение курса доллара всех полей
    int MAX_ALL = -1; // Максимальное значение курса доллара всех полей
    const int A = 60, B = 120; // Диапазон для случайних чисел
    int fl_rand, choice; // Флаги
    int n;

    do {
        cout << "Введите количество банков: "; cin >> n; cout << endl;
        if (n <= 0) cout << "Пожалуйста введите корректное количество банков\n" << endl;
    } while (n <= 0);

    BANK* bank = new BANK[n]; // Динамический массив структуры

    do {
        cout << "Хотите ли вы вводить данные вручную или случайно (0/1): "; cin >> choice;
        switch (choice) { // Организация вобора через switch()
            case 0: fl_rand = 0; break;
            case 1: fl_rand = 1; break;
            default: cout << "Ошибка ввода варианта ответа" << endl << endl;
            }
    } while (not(choice == 1 || choice == 0)); // Проверка корректности ввода

    // Ввод данных банков
    for (int i = 0; i < n; i++)
    {
        if (choice) {
            cout << "\nВведите название банка: " << endl;
            cin >> bank[i].name;
            bank[i].b_d = rand() % (B - A + 1) + A;
            bank[i].s_d = rand() % (B - A + 1) + A;
            bank[i].b_e = rand() % (B - A + 1) + A;
            bank[i].s_e = rand() % (B - A + 1) + A;
        }
        else {
            do
            {
                cout << "\nВведите название банка: "; cin >> bank[i].name;

                cout << "Введите курс покупки доллара - "; cin >> bank[i].b_d;
                if (bank[i].b_d < 0) {
                    cout << "Значение введено неверно\n" << endl; continue;
                }

                cout << "Введите курс продажи доллара - "; cin >> bank[i].s_d;
                if (bank[i].s_d < 0) {
                    cout << "Значение введено неверно\n" << endl; continue;
                }

                cout << "Введите курс покупки евро - "; cin >> bank[i].b_e;
                if (bank[i].b_e < 0) {
                    cout << "Значение введено неверно\n" << endl; continue;
                }

                cout << "Введите курс продажи евро - "; cin >> bank[i].s_e;
                if (bank[i].s_e < 0) {
                    cout << "Значение введено неверно\n" << endl; continue;
                }

            } while ((bank[i].s_d < 0) || (bank[i].b_d < 0) || (bank[i].s_e < 0) || (bank[i].b_e < 0));
        }
        
        // Вывод таблицы
        printf("--------------------------------------------------------------------------------------------------------------");
        printf("\n| N | Название | Покупка (Д) | Продажа (Д) | Средний курс (Д) | Покупка (Е) | Продажа (Е) | Средний курс (Е) |");
        printf("\n--------------------------------------------------------------------------------------------------------------");
        printf("\n|%3d|%10s|%13d|%13d|%18d|%13d|%13d|%18d|", i + 1, bank[i].name, bank[i].b_d, bank[i].s_d, ((bank[i].s_d + bank[i].b_d) / 2), bank[i].b_e, bank[i].s_e, ((bank[i].s_e + bank[i].b_e) / 2));
        printf("\n--------------------------------------------------------------------------------------------------------------");
        cout << endl;

        SR_ALL += (bank[i].s_d + bank[i].b_d) / 2; // Среднее значение среднего курса (Д) всех банков

        // Поиск максимального среднего курса (Д)
        if (MAX_ALL < ((bank[i].s_d + bank[i].b_d) / 2)) MAX_ALL = (bank[i].s_d + bank[i].b_d) / 2;
    }
    SR_ALL /= n;
    cout << "\n\n\n" << endl;

    // Вывод таблиц у которых >= SR_ALL
    cout << "Банки у которых средний курс (Д) >= среднему значению по всем банкам (" << SR_ALL << "):" << endl;
    for (int i = 0; i < n; i++) {
        if (((bank[i].s_d + bank[i].b_d) / 2) >= SR_ALL) {
            printf("--------------------------------------------------------------------------------------------------------------");
            printf("\n| N | Название | Покупка (Д) | Продажа (Д) | Средний курс (Д) | Покупка (Е) | Продажа (Е) | Средний курс (Е) |");
            printf("\n--------------------------------------------------------------------------------------------------------------");
            printf("\n|%3d|%10s|%13d|%13d|%18d|%13d|%13d|%18d|", i + 1, bank[i].name, bank[i].b_d, bank[i].s_d, ((bank[i].s_d + bank[i].b_d) / 2), bank[i].b_e, bank[i].s_e, ((bank[i].s_e + bank[i].b_e) / 2));
            printf("\n--------------------------------------------------------------------------------------------------------------\n");
        }
    }
    cout << "\n\n" << endl;

    // Вывод таблиц у которых < SR_ALL
    cout << "Банки у которых средний курс (Д) < среднего значения по всем банкам (" << SR_ALL << "):" << endl;
    for (int i = 0; i < n; i++) {
        if (((bank[i].s_d + bank[i].b_d) / 2) < SR_ALL) {
            printf("--------------------------------------------------------------------------------------------------------------");
            printf("\n| N | Название | Покупка (Д) | Продажа (Д) | Средний курс (Д) | Покупка (Е) | Продажа (Е) | Средний курс (Е) |");
            printf("\n--------------------------------------------------------------------------------------------------------------");
            printf("\n|%3d|%10s|%13d|%13d|%18d|%13d|%13d|%18d|", i + 1, bank[i].name, bank[i].b_d, bank[i].s_d, ((bank[i].s_d + bank[i].b_d) / 2), bank[i].b_e, bank[i].s_e, ((bank[i].s_e + bank[i].b_e) / 2));
            printf("\n--------------------------------------------------------------------------------------------------------------\n");
        }
    }
    cout << "\n\n" << endl;

    // Вывод таблиц у которых = MAX_ALL
    cout << "Банки у которых средний курс (Д) == максимальному значению по всем банкам (" << MAX_ALL << "):" << endl;
    for (int i = 0; i < n; i++) {
        if (((bank[i].s_d + bank[i].b_d) / 2) == MAX_ALL) {
            printf("--------------------------------------------------------------------------------------------------------------");
            printf("\n| N | Название | Покупка (Д) | Продажа (Д) | Средний курс (Д) | Покупка (Е) | Продажа (Е) | Средний курс (Е) |");
            printf("\n--------------------------------------------------------------------------------------------------------------");
            printf("\n|%3d|%10s|%13d|%13d|%18d|%13d|%13d|%18d|", i + 1, bank[i].name, bank[i].b_d, bank[i].s_d, ((bank[i].s_d + bank[i].b_d) / 2), bank[i].b_e, bank[i].s_e, ((bank[i].s_e + bank[i].b_e) / 2));
            printf("\n--------------------------------------------------------------------------------------------------------------\n");
        }
    }

    return 0;
}
